# Argon 475 HMC runs  

```{r ,include=FALSE}
library(Rose)
library(ggplot2)
library(plotly)
library(knitr)
library(hadron)
df <- data.frame(x = 1:5, y = 1:5)
f1 <- function(df) {
  gg <- ggplot(df, aes(x,y)) + geom_point()
  assign("ggp", plotly::ggplotly(gg), envir=parent.frame())
  #ggp
  df    # NOT returning a plot
}
res1 <- f1(df)
ggp   # Let knit handle the plot
#widgetframe::frameableWidget(ggplotly(ggp)%>%config(mathjax = "cdn") )
```



```{r, echo=FALSE, results='asis', warning=FALSE, cache=TRUE}
# 1
dfall<-data.frame("T"=c(0),
                "H"=c(0),"errH"=c(0),
                "K"=c(0),"dK"=c(0),
                "V"=c(0),"dV"=c(0),
                "dH"=c(0),"ddH"=c(0),
                "exp(-dH)"=c(0),"dexp(-dH)"=c(0)
                )
count<-1
for( T in seq(90,320,10) ){
  file<-paste0("/home/garofalo/analysis/chemHMC/Argon/Ar-475/",T,"K/HMC_hystory_",T,"K.txt")
  if(file.exists(file)){
    cat("### T=",T,"K\n\n")
    dft<-data.frame("obs"=c("H","K","V","dH","exp(-dH)"), "ave"=rep(1,5), "tauint"=rep(1,5) )
    df<-read.table(file, header = TRUE)
    myl<-list(T,1,2,3,4,5)
    cat("sampling every 1000 trajectories\n\n")
    lines<-seq(1000,length(df[,1]),1000)
    for (i in c(1,2,3,4,5)){
      tmp<-uwerrprimary(df[lines,i])
      myl[[2+(i-1)*2]]<-tmp$value
      myl[[3+(i-1)*2]]<-tmp$dvalue
      if (i==3 & (T>110 | T<=140 ) ){
        plot(tmp, main="V")
      }
      if(i==4){
        gg<- ggplot(df[lines,],aes( df[lines,i]) )+ geom_histogram(bins = 100) +theme_bw()
        fig1<-myplotly(gg,xlabel ="$H$" , to_print = TRUE)
      }
      dft[i,2]<- mean_print(tmp$value,tmp$dvalue)
      dft[i,3]<- mean_print(tmp$tauint,tmp$dtauint)
    }
    dfall[count, ]<- myl
    count<- count+1
    print(kable(dft))
  }
  
}
save(dfall, file = "Ar-475_HMC.Rdata")

```



## hot start

```{r, echo=FALSE, results='asis', warning=FALSE, cache=TRUE}
# 1
dfall_h<-data.frame("T"=c(0),
                "H"=c(0),"errH"=c(0),
                "K"=c(0),"dK"=c(0),
                "V"=c(0),"dV"=c(0),
                "dH"=c(0),"ddH"=c(0),
                "exp(-dH)"=c(0),"dexp(-dH)"=c(0)
                )
count<-1
for( T in seq(80,300,10) ){
  file<-paste0("/home/garofalo/analysis/chemHMC/Argon/Ar-475/hot_start/",T,"K/HMC_hystory_",T,"K.txt")
  if(file.exists(file)){
    cat("### T=",T,"K\n\n")
    dft<-data.frame("obs"=c("H","K","V","dH","exp(-dH)"), "ave"=rep(1,5), "tauint"=rep(1,5) )
    df<-read.table(file, header = TRUE)
    myl<-list(T,1,2,3,4,5)
    lines<-c(1:length(df[,1]))
    
    cat("sampling every 1000 trajectories \n\n")
    lines<-seq(1000,length(df[,1]),1000)
    
    for (i in c(1,2,3,4,5)){
      tmp<-uwerrprimary(df[lines,i])
      myl[[2+(i-1)*2]]<-tmp$value
      myl[[3+(i-1)*2]]<-tmp$dvalue
      if (i==3 & (T==74 | T>200 ) ){
        plot(tmp, main="V")
      }
      if(i==4){
        gg<- ggplot(df[lines,],aes( df[lines,i]) )+ geom_histogram(bins = 100) +theme_bw()
        fig1<-myplotly(gg,xlabel ="$H$" , to_print = TRUE)
      }
      dft[i,2]<- mean_print(tmp$value,tmp$dvalue)
      dft[i,3]<- mean_print(tmp$tauint,tmp$dtauint)
    }
    dfall_h[count, ]<- myl
    count<- count+1
    print(kable(dft))
  }
  
}
save(dfall_h, file = "Ar-475_HMC_hot_start.Rdata")

```




## cutoff

```{r, echo=FALSE, results='asis', warning=FALSE, cache=TRUE}
# 2
dfall_c24<-data.frame("T"=c(0),
                "H"=c(0),"errH"=c(0),
                "K"=c(0),"dK"=c(0),
                "V"=c(0),"dV"=c(0),
                "dH"=c(0),"ddH"=c(0),
                "exp(-dH)"=c(0),"dexp(-dH)"=c(0)
                )
count<-1
for( T in seq(80,300,10) ){
  file<-paste0("/home/garofalo/analysis/chemHMC/Argon/Ar-475/cutoff/",T,"K/HMC_hystory_",T,"K.txt")
  if(file.exists(file)){
    cat("### T=",T,"K\n\n")
    dft<-data.frame("obs"=c("H","K","V","dH","exp(-dH)"), "ave"=rep(1,5), "tauint"=rep(1,5) )
    df<-read.table(file, header = TRUE)
    myl<-list(T,1,2,3,4,5)
    lines<-c(1:length(df[,1]))
    
    cat("sampling every 1000 trajectories \n\n")
    lines<-seq(1000,length(df[,1]),1000)
    
    for (i in c(1,2,3,4,5)){
      tmp<-uwerrprimary(df[lines,i])
      myl[[2+(i-1)*2]]<-tmp$value
      myl[[3+(i-1)*2]]<-tmp$dvalue
      if (i==3 & (T>=100 | T<=130 ) ){
        plot(tmp, main="V")
      }
      # if(i==4){
      #   gg<- ggplot(df[lines,],aes( df[lines,i]) )+ geom_histogram(bins = 100) +theme_bw()
      #   fig1<-myplotly(gg,xlabel ="$H$" , to_print = TRUE)
      # }
      dft[i,2]<- mean_print(tmp$value,tmp$dvalue)
      dft[i,3]<- mean_print(tmp$tauint,tmp$dtauint)
    }
    dfall_c24[count, ]<- myl
    count<- count+1
    print(kable(dft))
  }
  
}
save(dfall_c24, file = "Ar-475_HMC_cutoff24.Rdata")

```




## cutoff hot start

```{r, echo=FALSE, results='asis', warning=FALSE, cache=TRUE}
# 1
dfall_c24_h<-data.frame("T"=c(0),
                "H"=c(0),"errH"=c(0),
                "K"=c(0),"dK"=c(0),
                "V"=c(0),"dV"=c(0),
                "dH"=c(0),"ddH"=c(0),
                "exp(-dH)"=c(0),"dexp(-dH)"=c(0)
                )
count<-1
for( T in seq(80,300,10) ){
  file<-paste0("/home/garofalo/analysis/chemHMC/Argon/Ar-475/cutoff/hot_start/",T,"K/HMC_hystory_",T,"K.txt")
  if(file.exists(file)){
    cat("### T=",T,"K\n\n")
    dft<-data.frame("obs"=c("H","K","V","dH","exp(-dH)"), "ave"=rep(1,5), "tauint"=rep(1,5) )
    df<-read.table(file, header = TRUE)
    myl<-list(T,1,2,3,4,5)
    lines<-c(1:length(df[,1]))
    
    cat("sampling every 1000 trajectories \n\n")
    lines<-seq(1000,length(df[,1]),1000)
    
    for (i in c(1,2,3,4,5)){
      tmp<-uwerrprimary(df[lines,i])
      myl[[2+(i-1)*2]]<-tmp$value
      myl[[3+(i-1)*2]]<-tmp$dvalue
      if (i==3 & (T>=100 | T<=130 ) ){
        plot(tmp, main="V")
      }
      # if(i==4){
      #   gg<- ggplot(df[lines,],aes( df[lines,i]) )+ geom_histogram(bins = 100) +theme_bw()
      #   fig1<-myplotly(gg,xlabel ="$H$" , to_print = TRUE)
      # }
      dft[i,2]<- mean_print(tmp$value,tmp$dvalue)
      dft[i,3]<- mean_print(tmp$tauint,tmp$dtauint)
    }
    dfall_c24_h[count, ]<- myl
    count<- count+1
    print(kable(dft))
  }
  
}
save(dfall_c24_h, file = "Ar-475_HMC_cutoff24_hot_start.Rdata")

```
